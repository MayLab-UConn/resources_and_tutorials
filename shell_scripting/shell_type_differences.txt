This text is a quick reference for switching scripts back and forth between
the two popular (in lab) shell scripting languages, bash and tcsh. Honestly, everyone should
use bash if only because StackExchange bash questions are more common

First, how your file will be interpreted depends on the first line. The following
first "#" at the start of the line are necessary. In all other contexts, they are comments

#!/bin/bash     # for bash
#!/bin/tcsh     # for tcsh

We'll now go through syntax differences between the languages regarding variables, loops, and conditionals

---------
variables
---------

# To set a variable
set myvar = 100   # tcsh. There can be spaces or no spaces, but it has to be consistent on both sides of the equals sign
myvar=100         # bash. NO SPACES - very common error

# To set an environmental variable (variables that some other process within the shell will use)
setenv MYENVIRONMENTAL = 100   # tcsh. Again the spacing must be consistent
export MYENVIRONMENTAL=100     # bash. Space after export, but not around equals


---------
loops
---------

# tcsh
foreach i (`seq 1 10`)
    echo $i
end

# bash
for i in `seq 10`; do     # need semicolon, or have "do" on next line
    echo $i
done 


#tcsh
set i = 1
while ($i < 10)
    echo $i
    i=$((i - 1))
end

# bash 
i=1
while [ $i -lt 10 ]; do   # need semicolon, or have "do" on next line
    echo $i
    i=$((i - 1))
done

The differences
    -for vs foreach
    -done vs end
    -need for semicolon or line break in bash
    -do statement in bash

------------
conditionals
-----------

#tcsh
if ((condition1 == condition2)) then     # no semicolon
   echo "condition 1"
else if (condition1 > condition2)) then 
   echo "condition 2
endif


# bash
if [ condition1 -eq condition2 ]; then    # semicolon
    echo "run condition 1"
elif [ condition1 -eq condition2 ]; then
    echo "run condition 2"
else
    echo "Run else condition"
fi

The differences
    -semicolon/line brake requirement in bash
    -parentheses vs square brackets
    -elif vs else if
    -fi vs endif
